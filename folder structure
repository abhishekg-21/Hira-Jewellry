hira-jewellery/
â”‚
â”œâ”€â”€ app/                          # App directory (Next.js 13+)
â”‚   â”œâ”€â”€ layout.tsx               # Root layout
â”‚   â”œâ”€â”€ page.tsx                 # Homepage
â”‚   â””â”€â”€ components/             # Reusable UI components
â”‚       â”œâ”€â”€ Header.tsx
â”‚       â”œâ”€â”€ HeroBanner.tsx
â”‚       â”œâ”€â”€ FeaturedSection.tsx
â”‚       â”œâ”€â”€ RakhiBanner.tsx
â”‚       â”œâ”€â”€ ProductSlider.tsx
â”‚       â”œâ”€â”€ InstagramGrid.tsx
â”‚       â”œâ”€â”€ SummerCollection.tsx
â”‚       â”œâ”€â”€ CustomizationSteps.tsx
â”‚       â”œâ”€â”€ BlogSection.tsx
â”‚       â””â”€â”€ menuData.ts         # Dropdown menu structure
â”‚
â”œâ”€â”€ public/                     # Public assets (images, fonts, etc.)
â”‚   â”œâ”€â”€ images/
â”‚   â”‚   â”œâ”€â”€ logo.png
â”‚   â”‚   â”œâ”€â”€ rakhi-left.jpg
â”‚   â”‚   â”œâ”€â”€ necklace-promo.jpg
â”‚   â”‚   â”œâ”€â”€ earring-promo.jpg
â”‚   â”‚   â””â”€â”€ ...
â”‚   â””â”€â”€ favicon.ico
â”‚
â”œâ”€â”€ styles/                    # Global styles (optional if using Tailwind only)
â”‚   â””â”€â”€ globals.css
â”‚
â”œâ”€â”€ .gitignore
â”œâ”€â”€ next.config.js
â”œâ”€â”€ package.json
â”œâ”€â”€ postcss.config.js
â”œâ”€â”€ tailwind.config.js
â””â”€â”€ tsconfig.json



hira-jewellery/
â”‚
â”œâ”€â”€ app/                          # App directory (Next.js 13+)
â”‚   â”œâ”€â”€ layout.tsx               # Root layout
â”‚   â”œâ”€â”€ page.tsx                 # Homepage
â”‚   â””â”€â”€ components/             # Reusable UI components
â”‚       â”œâ”€â”€ Header.tsx
â”‚       â”œâ”€â”€ HeroBanner.tsx
â”‚       â”œâ”€â”€ FeaturedSection.tsx
â”‚       â”œâ”€â”€ RakhiBanner.tsx
â”‚       â”œâ”€â”€ ProductSlider.tsx
â”‚       â”œâ”€â”€ InstagramGrid.tsx
â”‚       â”œâ”€â”€ SummerCollection.tsx
â”‚       â”œâ”€â”€ CustomizationSteps.tsx
â”‚       â”œâ”€â”€ BlogSection.tsx
â”‚       â”œâ”€â”€ RakshaBandhan2025.tsx    # âœ… NEW: Raksha Bandhan 2025 section
â”‚       â””â”€â”€ menuData.ts         # Dropdown menu structure
â”‚
â”œâ”€â”€ public/                     # Public assets (images, fonts, etc.)
â”‚   â”œâ”€â”€ images/
â”‚   â”‚   â”œâ”€â”€ logo.png
â”‚   â”‚   â”œâ”€â”€ rakhi-left.jpg
â”‚   â”‚   â”œâ”€â”€ necklace-promo.jpg
â”‚   â”‚   â”œâ”€â”€ earring-promo.jpg
â”‚   â”‚   â”œâ”€â”€ rakhi-preview-1.jpg     # âœ… Suggested new preview images
â”‚   â”‚   â”œâ”€â”€ rakhi-preview-2.jpg
â”‚   â”‚   â”œâ”€â”€ rakhi-preview-3.jpg
â”‚   â”‚   â”œâ”€â”€ rakhi-preview-4.jpg
â”‚   â”‚   â””â”€â”€ ...
â”‚   â””â”€â”€ favicon.ico
â”‚
â”œâ”€â”€ styles/
â”‚   â””â”€â”€ globals.css
â”‚
â”œâ”€â”€ .gitignore
â”œâ”€â”€ next.config.js
â”œâ”€â”€ package.json
â”œâ”€â”€ postcss.config.js
â”œâ”€â”€ tailwind.config.js
â””â”€â”€ tsconfig.json


git add .
git commit -m "c"
git push

# 1) Make sure you're on main
git checkout main

# 2) Fetch the remote branches/tags
git fetch origin

# 3) Rebase your local commits on top of what's on GitHub
git pull --rebase origin main

# (If you see conflicts, fix files â†’ `git add <file>` â†’ continue)
# Repeat until rebase finishes:
#   git rebase --continue

# 4) Now your history lines up; push succeeds
git push origin main


{/* Panel */}
            <div className="lg:hidden fixed inset-0 z-40 bg-[#fefcf8] flex flex-col h-200">
              {/* Header with Back + Close */}
              <div className="flex justify-between items-center p-4 border-b">
                <div>
                  {activeSubmenu || activeHeading ? (
                    <button
                      onClick={() =>
                        activeHeading
                          ? setActiveHeading(null)
                          : setActiveSubmenu(null)
                      }
                      className="flex items-center gap-2 text-sm font-medium"
                    >
                      â€¹ {getBackLabel()}
                    </button>
                  ) : null}
                </div>
                <button
                  onClick={toggleMenu}
                  className="flex items-center gap-2 text-sm font-medium"
                >
                  <X size={20} /> CLOSE
                </button>
              </div>

              {/* Scrollable content */}
              <div className="flex-1 overflow-y-auto">
                {/* Level 1: top menu */}
                {!activeSubmenu && !activeHeading && (
                  <>
                    <nav className="flex flex-col divide-y">
                      {menuData.map((item) => (
                        <button
                          key={item.label}
                          onClick={() =>
                            item.columns || item.promos
                              ? setActiveSubmenu(item.label)
                              : (window.location.href = item.link || "#")
                          }
                          className="flex justify-between items-center px-5 py-4 text-[15px] font-medium text-left"
                        >
                          {item.label}
                          <span className="text-lg">â€º</span>
                        </button>
                      ))}
                    </nav>

                    {/* Promo Images at top-level */}
                    <div className="grid grid-cols-2 gap-2 py-0.1 px-9">
                      <div className="relative w-40 h-60">
                        <Image
                          src="/images/brands/hira_vermile/dropdown/riyaa.02_1749977731_3655400610936832390_62329184037.webp"
                          alt="Promo 1"
                          fill
                          className="object-cover"
                        />
                      </div>
                      <div className="relative w-40 h-60">
                        <Image
                          src="/images/brands/hira_vermile/dropdown/IMG_20250503_181725_f7d8d992-3cbb-496a-81de-6cdfe75be1f0.webp"
                          alt="Promo 2"
                          fill
                          className="object-cover"
                        />
                      </div>
                    </div>

                    {/* Bottom Section */}
                    <div className="px-5 py-6 space-y-4 text-[14px]">
                      <Link
                        href="/pages/track-order"
                        className="flex items-center gap-2"
                      >
                        ðŸšš TRACK YOUR ORDER
                      </Link>
                      <Link href="/account/login">LOG IN</Link>

                      <div className="flex justify-between gap-3 pt-4">
                        <select className="flex-1 border border-gray-300 p-2 text-sm">
                          <option>IN / INR</option>
                          <option>US / USD</option>
                        </select>
                        <select className="flex-1 border border-gray-300 p-2 text-sm">
                          <option>English</option>
                          <option>à¤¹à¤¿à¤‚à¤¦à¥€</option>
                        </select>
                      </div>
                    </div>
                  </>
                )}

                {/* Level 2: submenu headings */}
                {activeSubmenu && !activeHeading && (
                  <div className="p-5 space-y-6">
                    {menuData
                      .filter((m) => m.label === activeSubmenu)
                      .map((menu) => (
                        <div key={menu.label}>
                          {menu.columns?.map((col, i) => (
                            <button
                              key={i}
                              onClick={() => setActiveHeading(col.heading)}
                              className="flex justify-between w-full py-4 border-b text-left text-[15px] font-medium"
                            >
                              {col.heading}
                              <span className="text-lg">â€º</span>
                            </button>
                          ))}

                          {/* Promo Images */}
                          {menu.promos && menu.promos.length > 0 && (
                            <div className="grid grid-cols-2 gap-2 mt-6">
                              {menu.promos.map((promo, idx) => (
                                <div
                                  key={idx}
                                  className="relative w-full h-40"
                                >
                                  <Image
                                    src={promo.image}
                                    alt={promo.label}
                                    fill
                                    className="object-cover rounded"
                                  />
                                </div>
                              ))}
                            </div>
                          )}
                        </div>
                      ))}
                  </div>
                )}

                {/* Level 3: heading links */}
                {activeHeading && (
                  <div className="p-5 space-y-4">
                    {menuData
                      .filter((m) => m.label === activeSubmenu)
                      .flatMap((m) => m.columns || [])
                      .filter((c) => c.heading === activeHeading)
                      .map((col, i) => (
                        <ul key={i} className="space-y-2">
                          {col.links.map((link, idx) => (
                            <li key={idx}>
                              <Link
                                href={link.link}
                                className="block text-[14px]"
                                onClick={() => setMenuOpen(false)}
                              >
                                {link.label}
                              </Link>
                            </li>
                          ))}
                        </ul>
                      ))}
                  </div>
                )}
              </div>
            </div>